{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/service/taskservice.service.ts","./src/app/todolistapp/todolistapp.component.ts","./src/app/todolistapp/todolistapp.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,6EAAmC;;6FDOtB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AAC4B;AACI;AAEnC;AACW;;AAiBhD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,4FAAuB;YACvB,0DAAW;YACX,qEAAgB;SACjB;mIAIU,SAAS,mBAZlB,2DAAY;QACZ,uFAAoB,aAGpB,uEAAa;QACb,4FAAuB;QACvB,0DAAW;QACX,qEAAgB;6FAKP,SAAS;cAdrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,uFAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,0DAAW;oBACX,qEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA;AAAA,aAAa;AAC8B;;;AAYpC,MAAM,kBAAkB;IAQ7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH1B,YAAO,GAAG,6BAA6B,CAAC;IAGV,CAAC;IAEzC,OAAO;QAEP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAErC,CAAC;IAEA,OAAO,CAAC,IAAU;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAE3C,CAAC;IAED,QAAQ,CAAC,IAAU;QAEjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAE,IAAI,IAAI,CAAC,GAAG,EAAE,EAAC,IAAI,CAAC,CAAC;IAE5D,CAAC;IAGD,UAAU,CAAC,EAAS;QAElB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IAElD,CAAC;;oFAjCY,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAgB;AACkC;;;;;;;IC+B9C,yEACE;IAAA,yEAA4B;IAAA,sEAAK;IAAA,uDAC/B;IAAA,wEAAmE;IAAhE,4VAAwB;IAAwC,wEAA0B;IAAA,+DAAI;IAAA,4DAAI;IAAA,4DAAI;IACzG,wEAAyE;IAAtE,kWAA8B;IAAwC,wEAA0B;IAAA,iEAAM;IAAA,4DAAI;IAAA,4DAAI;IACnH,4DAAM;IAAA,4DAAK;IACf,4DAAK;;;IAJgC,0DAC/B;IAD+B,2FAC/B;;ADrBD,MAAM,oBAAoB;IAI/B,YAAmB,WAA8B;QAA9B,gBAAW,GAAX,WAAW,CAAmB;IAChD,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,EAAE,CAAC;IACjB,CAAC;IAIJ,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;YAC/C,IAAI,CAAC,WAAW,CAAC,KAAK,GAAC,GAAc,CAAC,CAAE,yDAAyD;QAC9F,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,IAAa;QACtB,IAAI,IAAI;YACN,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG;YAC9B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,EAAE;SACP;IACL,CAAC;IAGD,UAAU,CAAC,QAAe;QACxB,IAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAE,EAAE,EAAC,EAAE,mBAAmB;YAC/C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;gBACzD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACzB,IAAI,CAAC,OAAO,EAAE,CAAC;YAChB,CAAC,CAAC,CAAC;SACH;aACG,EAAE,0BAA0B;YAC9B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;gBAC3D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACzB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,CAAC,CAAC,CAAC;SACJ;IACF,CAAC;IAGA,MAAM,CAAC,EAAS;QACf,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;YAC/C,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACF,CAAC;IAGH,IAAI,CAAC,IAAU;QACd,IAAI,CAAC,WAAW,CAAC,YAAY,GAAC,IAAI,CAAC;IAClC,CAAC;;wFAvDS,oBAAoB;oGAApB,oBAAoB;;QCVjC,uEACE;QAAA,uEACE;QACA,qEACA;QACA,qEACA;QACA,qEACF;QAAA,4DAAO;QAEP,uEAEA;QAAA,yEACE;QAAA,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QAEjB,yEACE;QAAA,8EAEA;QAFyB,8RAAY,mBAAoB,IAAC;QAE1D,0EAAqC;QACnC,+EACD;QADgD,+MAA0C;QAAzF,4DACD;QAAA,iFACD;QADoG,gNAA2C;QAA9I,4DACD;QAAA,4DAAM;QACN,8EAAmF;QAAA,yEAA0B;QAAA,+DAAG;QAAA,4DAAI;QAAA,4DAAS;QAE/H,4DAAO;QACP,4DAAM;QAEN,0EACE;QAAA,2EACF;QAAA,kHACE;QAKH,4DAAM;QACN,4DAAM;QAEP,4DAAM;QAON,4DAAO;QACT,4DAAO;;QA3BgD,2DAA0C;QAA1C,qGAA0C;QACS,0DAA2C;QAA3C,sGAA2C;QAS7I,0DAA0C;QAA1C,0FAA0C;;6FDnBrC,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEZD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todolist';\n}\n","<app-todolistapp></app-todolistapp>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TodolistappComponent } from './todolistapp/todolistapp.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {FormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodolistappComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","//taskservice\nimport { Injectable } from '@angular/core';\nimport { getLocaleDateFormat } from '@angular/common';\nimport { HttpClient}  from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\nimport { Model } from '../model/model.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskserviceService {\n\n   selectedtask: Model;\n   tasks:Model[];\n\n   readonly baseURL = 'http://localhost:3000/tasks';\n\n\n  constructor(private http: HttpClient) { }\n\n  getdata(){\n\n  return this.http.get(this.baseURL);\n\n}\n\n putdata(task:Model){\n    \n   return this.http.post(this.baseURL, task);\n   \n  }\n\n  editdata(task:Model){\n  \n    return this.http.put(this.baseURL+ `/${task._id}`,task);\n  \n}\n\n\ndeletedata(id:string){\n\n  return this.http.delete(this.baseURL+ `/${id}`);\n\n}\n\n\n}\n","//task component\nimport { Component, OnInit } from '@angular/core';\n\nimport { NgForm} from '@angular/forms';\n\nimport { TaskserviceService } from '../service/taskservice.service';\nimport { Model } from '../model/model.model';\n\n@Component({\n  selector: 'app-todolistapp',\n  templateUrl: './todolistapp.component.html',\n  styleUrls: ['./todolistapp.component.css']\n})\nexport class TodolistappComponent implements OnInit {\n \n  \n\n  constructor(public taskservice:TaskserviceService) {\n   }\n\n  ngOnInit(): void {\n    this.refresh();\n    this.resetForm();\n    }\n    \n \n\n refresh(){\n   this.taskservice.getdata().subscribe((res)=>{\nthis.taskservice.tasks=res as Model[];  //returns an observable so save data to tasks we use \"as\"\n   });\n }\n\n resetForm(form?: NgForm) { // form?: means form is not necessary as input\n  if (form)\n    form.reset();\n  this.taskservice.selectedtask = {\n    _id: \"\",\n    task: \"\"\n    }\n}\n\n\nsubmitdata(taskform:NgForm){\n  if(taskform.value._id==\"\"){ // to push new data\n  this.taskservice.putdata(taskform.value).subscribe((res)=>{\n   this.resetForm(taskform);\n   this.refresh();\n  });\n }\n else{ // to push old edited data\n   this.taskservice.editdata(taskform.value).subscribe((res)=>{\n   this.resetForm(taskform);\n   this.refresh();\n   });\n }\n}\n\n\n delete(id:string){\n  this.taskservice.deletedata(id).subscribe((res)=>{\n    this.refresh();\n  });\n   }\n\n   \n edit(task:Model){\n  this.taskservice.selectedtask=task;\n   }\n  }\n","\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <!--Import Google Icon Font-->\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n    <!--Import materialize.css-->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\n    <!--Let browser know website is optimized for mobile-->\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  </head>\n\n  <body>\n\n  <div class=\"container\">\n    <h1>Todolist</h1>\n\n    <div class=\"row\">\n      <form #taskform=\"ngForm\" (ngSubmit)=\"submitdata(taskform)\">\n        \n      <div class=\"input-field col s10 m5\"> <!--s is for small screen measurement and m for medium--> \n        <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"taskservice.selectedtask._id\">\n       <input  class=\"large\" type=\"text\" placeholder=\"Add your task here..\"  name=\"task\"  #task=\"ngModel\" [(ngModel)]=\"taskservice.selectedtask.task\">\n      </div>\n      <button type=\"submit\" class=\"btn-floating waves-effect waves-light red hoverable\" ><i class=\"material-icons\">add</i></button>\n      \n    </form>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col s12 m6\">\n    <ul *ngFor=\"let taskdata of taskservice.tasks\" class=\"collection with-header z-depth-5\">\n      <li class=\"collection-item\"><div>{{taskdata.task}}\n        <a (click)=\"edit(taskdata)\" class=\"secondary-content waves-effect\"><i class=\"material-icons\">edit</i></a>\n        <a (click)=\"delete(taskdata._id)\" class=\"secondary-content waves-effect\"><i class=\"material-icons\">delete</i></a>\n      </div></li>\n  </ul>\n   </div>\n   </div>\n  \n  </div>\n  \n  \n    <!--JavaScript at end of body for optimized loading-->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"></script>\n     \n   \n  </body>\n</html>\n      ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}